// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Driver {
  id        String  @id @default(cuid())
  cpf       String  @unique
  email     String? @unique
  phone     String  @unique
  firstName String
  lastName  String
  password  String?

  childs    Child[]
  guardians Guardian[]
  School    School[]

  routes    DriverRoute[]
  locations DriverLocation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Guardian {
  id        String  @id @default(cuid())
  cpf       String  @unique
  email     String? @unique
  phone     String  @unique
  firstName String
  lastName  String
  password  String?

  driver   Driver @relation(fields: [driverId], references: [id])
  driverId String

  childs Child[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Child {
  id        String   @id @default(cuid())
  name      String
  birthDate DateTime
  address   String
  latitude  Float
  longitude Float

  school   School @relation(fields: [schoolId], references: [id])
  schoolId String

  guardian   Guardian @relation(fields: [guardianId], references: [id])
  guardianId String

  driver   Driver @relation(fields: [driverId], references: [id])
  driverId String

  routes ChildRoute[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model School {
  id        String @id @default(cuid())
  name      String
  address   String
  latitude  Float
  longitude Float

  driver   Driver  @relation(fields: [driverId], references: [id])
  driverId String
  childs   Child[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

// Modelo Rota
model Route {
  id             Int       @id @default(autoincrement())
  name           String
  travelDuration Int?
  daysOfTheWeek  String?
  startTime      DateTime?
  endTime        DateTime?

  // Relações
  halts        Halt[]
  driverRoutes DriverRoute[]
  childRoute   ChildRoute[]
}

// Modelo Parada
model Halt {
  id        Int    @id @default(autoincrement())
  address   String
  latitude  Float
  longitude Float
  type      String
  order     Int

  // Relações
  routeId Int
  route   Route @relation(fields: [routeId], references: [id])
}

// Modelo MotoristaRota
model DriverRoute {
  id       Int    @id @default(autoincrement())
  driverId String
  routeId  Int    @map("routeId")

  driver Driver @relation(fields: [driverId], references: [id])
  route  Route  @relation(fields: [routeId], references: [id])
}

// Modelo CriancaRota
model ChildRoute {
  id      Int    @id @default(autoincrement())
  childId String
  routeId Int

  // Relações
  child Child @relation(fields: [childId], references: [id])
  route Route @relation(fields: [routeId], references: [id])
}

// Modelo LocalizaçãoMotorista
model DriverLocation {
  id        Int      @id @default(autoincrement())
  driverId  String
  latitude  Float
  longitude Float
  dataHora  DateTime

  // Relações
  driver Driver @relation(fields: [driverId], references: [id])
}
